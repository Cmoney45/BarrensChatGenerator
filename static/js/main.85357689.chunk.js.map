{"version":3,"sources":["components/Wrapper/index.js","components/MyNav/index.js","components/BodyHeader/index.js","utils/API.js","components/JokeBox/index.js","pages/Home.js","App.js","components/Footer/index.js","serviceWorker.js","index.js"],"names":["Wrapper","trueClassName","concat","this","props","classPass","react_default","a","createElement","className","children","Component","MyNavBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeCurrentPage","route","setState","currentPage","state","window","location","pathname","_this2","components_Wrapper","reverse","map","Link","to","key","number","onClick","text","BodyHeader","t","minutes","Math","floor","seconds","timeConverter","timer","API","title","axios","get","JokeBox","jokeText","results","priorJokes","copySuccess","clockRunning","delayedCallback","debounce","ajaxCall","copyToClipboard","e","preventDefault","textArea","select","document","execCommand","target","focus","handleInputChange","event","value","name","defineProperty","then","res","data","newArray","includes","id","push","sort","newJoke","joke","replace","reset","catch","err","console","log","setInterval","increment","_this3","ref","textarea","onChange","onJokeClick","bind","Home","lastJokeCounter","resetClock","lastJokeInterval","components_BodyHeader","components_JokeBox","App","BrowserRouter","basename","process","MyNav_MyNavBar","Switch","Route","component","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85357689.chunk.js","sourcesContent":["// client.src.components.Wrapper\n\nimport React, { Component } from 'react';\nimport \"./style.css\";\n\nclass Wrapper extends Component {\n\n    render() {\n        const trueClassName = `wrapper ${this.props.classPass}`;\n\n        return (\n            <div\n                className={trueClassName}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Wrapper;\n ","// client.src.components.MyNav\n\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport Wrapper from '../Wrapper';\nimport \"./style.css\";\n\nexport default class MyNavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        currentPage: window.location.pathname\n      }\n    )\n  }\n\n  changeCurrentPage = (route) => {\n    this.setState({\n      currentPage: route\n    })\n  }\n\n  render() {\n    const mainRoutes = [\n    ]\n\n    return (\n      <header>\n        <Wrapper>\n          <h1>Barrens Chat Generator</h1>\n          <nav>\n            <div className=\"btn-group\">\n              {mainRoutes.reverse().map(route => (\n                <Link\n                  to={`${route.route}`}\n                  key={route.number}\n                  className={this.state.currentPage === route.route ? \"button currentPage\" : \"button\"}\n                  onClick={() => this.changeCurrentPage(route.route)}\n                >\n                  {route.text}\n                </Link>\n              ))}\n            </div>\n          </nav>\n        </Wrapper>\n      </header>\n    );\n  }\n}\n","// client.src.components.BodyHeader\n\nimport React, { Component } from 'react';\nimport \"./style.css\";\n\nclass BodyHeader extends Component {\n    \n    timeConverter (t) {\n\n        var minutes = Math.floor(t / 60);\n        var seconds = t - (minutes * 60);\n    \n        if (seconds < 10) {\n          seconds = \"0\" + seconds;\n        }\n    \n        if (minutes === 0) {\n          minutes = \"00\";\n        }\n        else if (minutes < 10) {\n          minutes = \"0\" + minutes;\n        }\n    \n        return minutes + \":\" + seconds;\n      }\n\n    render() {\n        return (\n            <h2>Time since previous Joke: {this.timeConverter(this.props.timer)}</h2>\n        );\n    }\n}\n\nexport default BodyHeader;\n","import axios from \"axios\";\n\nexport default {\n\n  getJoke: function(title) {\n    return axios.get(`http://api.icndb.com/jokes/random`);\n  }\n};\n","// client.src.components.JokeBox\n\nimport React, { Component } from \"react\";\nimport API from '../../utils/API';\nimport debounce from \"lodash.debounce\";\nimport \"./style.css\";\n\nclass JokeBox extends Component {\n    state = {\n        jokeText: '',\n        results: [],\n        priorJokes: [],\n        copySuccess: '',\n        clockRunning: false,\n\n    }\n\n    delayedCallback = debounce(this.ajaxCall, 400)\n\n    ajaxCall() {\n        // Call Api to get a joke\n        API.getJoke()\n            .then(res => {\n                const { value } = res.data;\n                const newArray = this.state.priorJokes;\n\n                if (newArray.includes(value.id)) {\n                    this.ajaxCall();\n                } else {\n                    newArray.push(value.id);\n                    newArray.sort();\n                    let newJoke = value.joke;\n\n                    // Search the joke for &quot and replace them. Not sure why these are in the API\n                    while(newJoke.includes(\"&quot;\")) {\n                        newJoke = newJoke.replace(\"&quot;\", '\"')\n                    }\n\n                    this.setState({ priorJokes: newArray })\n                    this.setState({ jokeText: newJoke })\n                    this.props.reset();\n\n                }\n\n            })\n            .catch(err => console.log(err));\n\n    }\n\n    onJokeClick(event) {\n        event.preventDefault();\n        this.delayedCallback(event);\n        this.setState({copySuccess: ''});\n        if(!this.state.clockRunning) {\n            setInterval(this.props.increment, 1000);\n            this.setState({clockRunning: true})\n        }\n    }\n\n    copyToClipboard = (e) => {\n        e.preventDefault();\n        this.textArea.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the the whole text area selected.\n        e.target.focus();\n        this.setState({ copySuccess: 'Copied!' });\n    };\n\n    handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        let value = event.target.value;\n        const name = event.target.name;\n    \n        // Updating the input's state\n        this.setState({\n          [name]: value\n        });\n      };\n\n\n    render() {\n        return (\n            <div>\n                <form >\n                    <div className=\"row gtr-50\">\n                        <div className=\"col-12\">\n                            <textarea\n                                value={this.state.jokeText}\n                                name=\"jokeText\"\n                                ref={(textarea) => this.textArea = textarea}\n                                onChange={this.handleInputChange}\n                            >\n                            </textarea>\n                        </div>\n                        <div className=\"col-12\">\n                            <ul className=\"actions\">\n                                {/* <li> */}\n                                <button\n                                    className=\"buttonPretty\"\n                                    onClick={this.onJokeClick.bind(this)}\n                                    value=\"Get Joke\"\n                                >\n                                    Get Joke\n                                    </button>\n                                {\" \"}\n                                <button\n                                    className=\"buttonPretty\"\n                                    onClick={this.copyToClipboard}\n                                >\n                                    Copy to Clipboard\n                                    </button>\n                                {this.state.copySuccess}\n                                {/* </li> */}\n                            </ul>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default JokeBox;","// client.src.pages.Home.js\n\nimport React, { Component } from \"react\";\nimport BodyHeader from \"../components/BodyHeader\";\nimport JokeBox from \"../components/JokeBox\";\n\nclass Home extends Component {\n    constructor() {\n        super();\n        this.state = {\n            lastJokeCounter: 0,\n            lastJokeInterval: 0,\n        }\n    }\n\n    increment = () => {\n        this.setState(\n            {\n                lastJokeCounter: this.state.lastJokeCounter + 1\n            })\n    }\n\n    resetClock = () => {\n        this.setState({ lastJokeCounter: 0 })\n    }\n\n    render() {\n        return (\n            <div>\n                {/* TODO : Add Timer countdown since last button push */}\n                <BodyHeader\n                    timer={this.state.lastJokeCounter}\n                />\n                <div>\n                    <JokeBox\n                        timer={this.state.lastJokeCounter}\n                        increment={this.increment}\n                        reset={this.resetClock}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/MyNav\";\nimport Home from \"./pages/Home\";\nimport Wrapper from \"./components/Wrapper\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router\n        basename={process.env.PUBLIC_URL}\n      >\n        <div className=\"App\">\n          <Nav />\n          <Wrapper classPass=\"push\">\n            <div id=\"main-body\">\n              <Switch id=\"main-body\">\n                <Route component={Home} />\n              </Switch>\n            </div>\n          </Wrapper>\n          {/* <Footer /> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport \"./style.css\";\n\nexport default class MyNavBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n\n        return (\n            <footer>\n                <a\n                    href=\"https://www.linkedin.com/in/colton-scherer-11161b83/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                >\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\n                </a>\n                <a\n                    href=\"https://github.com/Cmoney45\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                >\n                    <i className=\"fab fa-github fa-2x\"></i>\n                </a>\n            </footer>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import \"./App.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}